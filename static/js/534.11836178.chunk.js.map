{"version":3,"file":"static/js/534.11836178.chunk.js","mappings":"kNACA,EAAuB,6BAAvB,EAA4D,8BAA5D,EAAiG,6BAAjG,EAAsI,8BCAtI,EAAyB,0B,SCEV,SAASA,EAAT,GAAiD,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACrD,OACE,mBAAQF,KAAMA,EAAMC,KAAMA,EAAME,UAAWC,EAA3C,SACGF,GAGN,C,wBCTYG,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,ECOhB,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMR,GAAWS,EAAAA,EAAAA,IAAYX,GACvBY,GAAWC,EAAAA,EAAAA,MACXC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,cAAcpB,MACtB,IAAK,OACHY,EAAQO,EAAEC,cAAcC,OACxB,MACF,IAAK,SACHP,EAAUK,EAAEC,cAAcC,OAI/B,EAYD,OACE,kBAAMnB,UAAWC,EAAUmB,SAXZ,SAAAH,GAGf,GAFAA,EAAEI,iBACcjB,EAASkB,MAAK,SAAAC,GAAI,OAAIA,EAAKzB,OAASA,CAAlB,IAEhC,OAAO0B,MAAM,GAAD,OAAI1B,EAAJ,4BAEdgB,GAASW,EAAAA,EAAAA,IAAW,CAAE3B,KAAAA,EAAMa,OAAAA,KAC5BD,EAAQ,IACRE,EAAU,GACX,EAEC,WACE,mBAAOZ,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,mBACA,kBACEJ,KAAK,OACLC,KAAK,OACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,WACZ7B,UAAWC,EACX6B,SAAUd,EACVG,MAAOrB,QAGX,mBAAOE,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,qBACA,kBACEJ,KAAK,MACLC,KAAK,SACL4B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,cACZ7B,UAAWC,EACX6B,SAAUd,EACVG,MAAOR,QAGX,SAAC,EAAD,CAAQd,KAAK,SAASC,KAAK,aAAaC,KAAK,kBAGlD,CCnED,MAAuB,0BAAvB,EAAwD,0BCAxD,EAAyB,6BCIV,SAASgC,EAAT,GAA+B,IAAPC,EAAM,EAANA,GAC/BlB,GAAWC,EAAAA,EAAAA,MACjB,OACE,mBACElB,KAAK,SACLG,UAAWC,EACXgC,QAAS,WACPnB,GAASoB,EAAAA,EAAAA,IAAcF,GACxB,EALH,mBAUH,CCbc,SAASG,EAAT,GAA4C,IAArBrC,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,OAAQqB,EAAM,EAANA,GAC5CI,GAAUvB,EAAAA,EAAAA,IAAYP,GAG5B,OAFA+B,QAAQC,IAAI,yBAAgBF,IAG1B,iCACE,4BACE,uBAAItC,KACJ,uBAAIa,QAEN,SAAC,EAAD,CAAQqB,GAAIA,MAGjB,CClBM,IAAMO,EAAY,SAAApC,GAAK,OAAIA,EAAMqC,OAAOA,MAAjB,ECSf,SAASC,IACtB,IAAM3B,GAAWC,EAAAA,EAAAA,OACjB2B,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,IAEJ,IAAMV,GAAWS,EAAAA,EAAAA,IAAYX,GACvBsC,GAAS3B,EAAAA,EAAAA,IAAY0B,GACrBK,EAAmBxC,EAASoC,QAAO,SAAAjB,GAAI,OAC3CA,EAAKzB,KAAK+C,cAAcC,SAASN,EAAOK,cADG,IAG7C,OACE,8BACGzC,EAAS2C,OAAS,IACjB,eAAI/C,UAAWC,EAAf,SACG2C,EAAiBI,KAAI,SAAAzB,GACpB,OACE,eAAkBvB,UAAWC,EAA7B,UACE,SAACkC,EAAD,CACErC,KAAMyB,EAAKzB,KACXa,OAAQY,EAAKZ,OACbqB,GAAIT,EAAKS,MAJJT,EAAKS,GAQjB,OAKV,C,cCtCD,EAAuB,qBAAvB,EAAoD,sBCKrC,SAASiB,IACtB,IAAMT,GAAS3B,EAAAA,EAAAA,IAAY0B,GACrBzB,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,eAAIf,UAAWC,EAAf,oCACA,kBACEJ,KAAK,OACLC,KAAK,SACL+B,YAAY,mBACZ7B,UAAWC,EACXkB,MAAOqB,EACPV,SAAU,SAAAb,GACRH,GAASoC,EAAAA,EAAAA,GAASjC,EAAEC,cAAcC,OACnC,MAIR,CCvBD,MAA0B,yBAA1B,EAA2D,uBCE5C,SAASgC,EAAT,GAAuC,IAApBxB,EAAmB,EAAnBA,MAAOyB,EAAY,EAAZA,SACvC,OACE,qBAASpD,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,SAA2B0B,IAC1ByB,IAGN,CCLc,SAASC,IACtB,OACE,iCACE,SAACF,EAAD,CAASxB,MAAM,YAAf,UACE,SAACnB,EAAD,OAEF,UAAC2C,EAAD,CAASxB,MAAM,WAAf,WACE,SAACsB,EAAD,KACA,SAACR,EAAD,SAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/AddContactForm/AddContactForm.module.css?92ef","webpack://goit-react-hw-08-phonebook/./src/components/AddContactForm/AddButton/AddButton.module.css?4516","components/AddContactForm/AddButton/AddButton.jsx","redux/contacts/contactsSelector.js","components/AddContactForm/AddContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/RemoveButton/RemoveButton.module.css?7735","components/ContactList/RemoveButton/RemoveButton.jsx","components/ContactList/ContactItem/ContactItem.jsx","redux/filter/filterSelector.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddContactForm_form__JaAdA\",\"label\":\"AddContactForm_label__XseY1\",\"text\":\"AddContactForm_text__rRbBv\",\"input\":\"AddContactForm_input__wYAJT\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AddButton_button__LnfAa\"};","import PropTypes from 'prop-types';\nimport css from './AddButton.module.css';\n\nexport default function AddContactButton({ type, name, text }) {\n  return (\n    <button type={type} name={name} className={css.button}>\n      {text}\n    </button>\n  );\n}\n\nAddContactButton.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n};\n","export const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './AddContactForm.module.css';\nimport Button from './AddButton/AddButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelector';\n\nexport default function AddContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const changeHandle = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const isExist = contacts.find(item => item.name === name);\n    if (isExist) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      <label className={css.label}>\n        <span className={css.text}>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Jane Dou\"\n          className={css.input}\n          onChange={changeHandle}\n          value={name}\n        />\n      </label>\n      <label className={css.label}>\n        <span className={css.text}>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Your number\"\n          className={css.input}\n          onChange={changeHandle}\n          value={number}\n        />\n      </label>\n      <Button type=\"submit\" name=\"AddContact\" text=\"Add contact\" />\n    </form>\n  );\n}\n\nAddContactForm.propTypes = {\n  AddContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"RemoveButton_button__gTbz4\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport css from './RemoveButton.module.css';\n\nexport default function RemoveButton({ id }) {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      className={css.button}\n      onClick={() => {\n        dispatch(deleteContact(id));\n      }}\n    >\n      Delete\n    </button>\n  );\n}\n\nRemoveButton.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Button from '../RemoveButton/RemoveButton';\nimport { getLoading } from 'redux/contacts/contactsSelector';\n\nexport default function ContactItem({ name, number, id }) {\n  const loading = useSelector(getLoading);\n  console.log('🚀 ~ loading', loading);\n\n  return (\n    <>\n      <div>\n        <p>{name}</p>\n        <p>{number}</p>\n      </div>\n      <Button id={id} />\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","export const getFilter = state => state.filter.filter;\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport ContactItem from './ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contactsSelector';\nimport { getFilter } from 'redux/filter/filterSelector';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/contacts/contactsOperations';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const FilteredContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={css.list}>\n          {FilteredContacts.map(item => {\n            return (\n              <li key={item.id} className={css.item}>\n                <ContactItem\n                  name={item.name}\n                  number={item.number}\n                  id={item.id}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  filter: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};","import { getFilter } from 'redux/filter/filterSelector';\nimport { filtered } from 'redux/filter/filterSlice';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <h3 className={css.text}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Start write name\"\n        className={css.input}\n        value={filter}\n        onChange={e => {\n          dispatch(filtered(e.currentTarget.value));\n        }}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={css.section}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import AddContactForm from 'components/AddContactForm/AddContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <AddContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["AddContactButton","type","name","text","className","css","getContacts","state","contacts","items","getLoading","isLoading","AddContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","changeHandle","e","currentTarget","value","onSubmit","preventDefault","find","item","alert","addContact","pattern","title","required","placeholder","onChange","RemoveButton","id","onClick","deleteContact","ContactItem","loading","console","log","getFilter","filter","ContactList","useEffect","fetchAllContacts","FilteredContacts","toLowerCase","includes","length","map","Filter","filtered","Section","children","Contacts"],"sourceRoot":""}