{"version":3,"file":"static/js/590.3a760741.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/AddContactForm/AddButton/AddButton.module.css?4516","components/AddContactForm/AddButton/AddButton.jsx","redux/contacts/contactsSelector.js","webpack://goit-react-hw-08-phonebook/./src/components/AddContactForm/AddContactForm.module.css?92ef","components/AddContactForm/AddContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/RemoveButton/RemoveButton.module.css?7735","components/ContactList/RemoveButton/RemoveButton.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactItem/ContactItem.module.css?7ce2","components/ContactList/ContactItem/ContactItem.jsx","redux/filter/filterSelector.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AddButton_button__LnfAa\"};","import PropTypes from 'prop-types';\n\nimport css from './AddButton.module.css';\n\nexport default function AddContactButton({ type, name, text }) {\n  return (\n    <button type={type} name={name} className={css.button}>\n      {text}\n    </button>\n  );\n}\n\nAddContactButton.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n};\n","export const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddContactForm_form__JaAdA\",\"label\":\"AddContactForm_label__XseY1\",\"text\":\"AddContactForm_text__rRbBv\",\"input\":\"AddContactForm_input__wYAJT\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Button from './AddButton/AddButton';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelector';\n\nimport css from './AddContactForm.module.css';\n\nexport default function AddContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const changeHandle = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const isExist = contacts.find(item => item.name === name);\n    if (isExist) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      <label className={css.label}>\n        <span className={css.text}>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Jane Dou\"\n          className={css.input}\n          onChange={changeHandle}\n          value={name}\n        />\n      </label>\n      <label className={css.label}>\n        <span className={css.text}>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Your number\"\n          className={css.input}\n          onChange={changeHandle}\n          value={number}\n        />\n      </label>\n      <Button type=\"submit\" name=\"AddContact\" text=\"Add contact\" />\n    </form>\n  );\n}\n\nAddContactForm.propTypes = {\n  AddContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"RemoveButton_button__gTbz4\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport css from './RemoveButton.module.css';\n\nexport default function RemoveButton({ id }) {\n  const dispatch = useDispatch();\n  return (\n    <button\n      type=\"button\"\n      className={css.button}\n      onClick={() => {\n        dispatch(deleteContact(id));\n      }}\n    >\n      Delete\n    </button>\n  );\n}\n\nRemoveButton.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactItem_box__Rj2Em\",\"name\":\"ContactItem_name__+rhVe\",\"number\":\"ContactItem_number__2mm0v ContactItem_name__+rhVe\"};","import PropTypes from 'prop-types';\n\nimport Button from '../RemoveButton/RemoveButton';\n\nimport css from './ContactItem.module.css';\n\nexport default function ContactItem({ name, number, id }) {\n  return (\n    <>\n      <div className={css.box}>\n        <p className={css.name}>{name}</p>\n        <p className={css.number}>{number}</p>\n      </div>\n      <Button id={id} />\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","export const getFilter = state => state.filter.filter;\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport ContactItem from './ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contactsSelector';\nimport { getFilter } from 'redux/filter/filterSelector';\nimport { useEffect } from 'react';\nimport { fetchAllContacts } from 'redux/contacts/contactsOperations';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const FilteredContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={css.list}>\n          {FilteredContacts.map(item => {\n            return (\n              <li key={item.id} className={css.item}>\n                <ContactItem\n                  name={item.name}\n                  number={item.number}\n                  id={item.id}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  filter: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};","import { getFilter } from 'redux/filter/filterSelector';\nimport { filtered } from 'redux/filter/filterSlice';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <h3 className={css.text}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Start write name\"\n        className={css.input}\n        value={filter}\n        onChange={e => {\n          dispatch(filtered(e.currentTarget.value));\n        }}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={css.section}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import AddContactForm from 'components/AddContactForm/AddContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <AddContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["AddContactButton","type","name","text","className","css","getContacts","state","contacts","items","AddContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","changeHandle","currentTarget","value","onSubmit","e","preventDefault","find","item","alert","addContact","pattern","title","required","placeholder","onChange","RemoveButton","id","onClick","deleteContact","ContactItem","getFilter","filter","ContactList","useEffect","fetchAllContacts","FilteredContacts","toLowerCase","includes","length","map","Filter","filtered","Section","children","Contacts"],"sourceRoot":""}